!function(){var t={}.hasOwnProperty,e=function(e,n){function i(){this.constructor=e}for(var o in n)t.call(n,o)&&(e[o]=n[o]);return i.prototype=n.prototype,e.prototype=new i,e.__super__=n.prototype,e};this.Gmaps4RailsOpenlayers=function(t){function n(){n.__super__.constructor.apply(this,arguments),this.map_options={},this.mergeWithDefault("map_options"),this.markers_conf={},this.mergeWithDefault("markers_conf"),this.openMarkers=null,this.markersLayer=null,this.markersControl=null,this.polylinesLayer=null}return e(n,t),n.prototype.createPoint=function(){},n.prototype.createLatLng=function(t,e){return new OpenLayers.LonLat(e,t).transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913"))},n.prototype.createAnchor=function(t){return null===t?null:new OpenLayers.Pixel(t[0],t[1])},n.prototype.createSize=function(t,e){return new OpenLayers.Size(t,e)},n.prototype.createLatLngBounds=function(){return new OpenLayers.Bounds},n.prototype.createMap=function(){var t;return t=new OpenLayers.Map(this.map_options.id),t.addLayer(new OpenLayers.Layer.OSM),t.setCenter(this.createLatLng(this.map_options.center_latitude,this.map_options.center_longitude),this.map_options.zoom),t},n.prototype.createMarker=function(t){var e,n;return n=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style["default"]),n.fillOpacity=1,null===this.markersLayer&&(this.markersLayer=new OpenLayers.Layer.Vector("Markers",null),this.serviceObject.addLayer(this.markersLayer),this.markersLayer.events.register("featureselected",this.markersLayer,this.onFeatureSelect),this.markersLayer.events.register("featureunselected",this.markersLayer,this.onFeatureUnselect),this.markersControl=new OpenLayers.Control.SelectFeature(this.markersLayer),this.serviceObject.addControl(this.markersControl),this.markersControl.activate()),""===t.marker_picture?(n.graphicHeight=30,n.externalGraphic="http://openlayers.org/dev/img/marker-blue.png"):(n.graphicWidth=t.marker_width,n.graphicHeight=t.marker_height,n.externalGraphic=t.marker_picture,null!==t.marker_anchor&&(n.graphicXOffset=t.marker_anchor[0],n.graphicYOffset=t.marker_anchor[1]),""!==t.shadow_picture&&(n.backgroundGraphic=t.shadow_picture,n.backgroundWidth=t.shadow_width,n.backgroundHeight=t.shadow_height,null!==t.shadow_anchor&&(n.backgroundXOffset=t.shadow_anchor[0],n.backgroundYOffset=t.shadow_anchor[1]))),n.graphicTitle=t.marker_title,e=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(t.Lng,t.Lat),null,n),e.geometry.transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913")),this.markersLayer.addFeatures([e]),e},n.prototype.clearMarkers=function(){return this.clearMarkersLayerIfExists(),this.markersLayer=null,this.boundsObject=new OpenLayers.Bounds},n.prototype.clearMarkersLayerIfExists=function(){return null!==this.markersLayer&&null!==this.serviceObject.getLayer(this.markersLayer.id)?this.serviceObject.removeLayer(this.markersLayer):void 0},n.prototype.extendBoundsWithMarkers=function(){var t,e,n,i,o;for(console.log("here"),i=this.markers,o=[],e=0,n=i.length;n>e;e++)t=i[e],o.push(this.boundsObject.extend(this.createLatLng(t.lat,t.lng)));return o},n.prototype.createClusterer=function(t){var e,n,i,o,s;return i={pointRadius:"${radius}",fillColor:"#ffcc66",fillOpacity:.8,strokeColor:"#cc6633",strokeWidth:"${width}",strokeOpacity:.8},n={context:{width:function(t){var e;return null!=(e=t.cluster)?e:{2:1}},radius:function(t){var e;return e=2,t.cluster&&(e=Math.min(t.attributes.count,7)+2),e}}},s=new OpenLayers.Style(i,n),o=new OpenLayers.Strategy.Cluster,e=new OpenLayers.Layer.Vector("Clusters",{strategies:[o],styleMap:new OpenLayers.StyleMap({"default":s,select:{fillColor:"#8aeeef",strokeColor:"#32a8a9"}})}),this.clearMarkersLayerIfExists(),this.serviceObject.addLayer(e),e.addFeatures(t),e},n.prototype.clusterize=function(){var t,e,n,i,o;if(this.markers_conf.do_clustering===!0){for(null!==this.markerClusterer&&this.clearClusterer(),e=new Array,o=this.markers,n=0,i=o.length;i>n;n++)t=o[n],e.push(t.serviceObject);return this.markerClusterer=this.createClusterer(e)}},n.prototype.clearClusterer=function(){return this.serviceObject.removeLayer(this.markerClusterer)},n.prototype.createInfoWindow=function(t){return null!=t.description?t.serviceObject.infoWindow=t.description:void 0},n.prototype.onPopupClose=function(){return this.markersControl.unselect(this.feature)},n.prototype.onFeatureSelect=function(t){var e,n;return e=t.feature,n=new OpenLayers.Popup.FramedCloud("featurePopup",e.geometry.getBounds().getCenterLonLat(),new OpenLayers.Size(300,200),e.infoWindow,null,!0,this.onPopupClose),e.popup=n,n.feature=e,this.map.addPopup(n)},n.prototype.onFeatureUnselect=function(t){var e;return e=t.feature,e.popup?(this.map.removePopup(e.popup),e.popup.destroy(),e.popup=null):void 0},n.prototype.create_polyline=function(t){var e,n,i,o,s,r,a,l,c,h,u,p;for(null===this.polylinesLayer&&(this.polylinesLayer=new OpenLayers.Layer.Vector("Polylines",null),this.serviceObject.addLayer(this.polylinesLayer),this.polylinesLayer.events.register("featureselected",this.polylinesLayer,this.onFeatureSelect),this.polylinesLayer.events.register("featureunselected",this.polylinesLayer,this.onFeatureUnselect),this.polylinesControl=new OpenLayers.Control.DrawFeature(this.polylinesLayer,OpenLayers.Handler.Path),this.serviceObject.addControl(this.polylinesControl)),r=[],u=0,p=t.length;p>u;u++)n=t[u],n===t[0]&&(a=n.strokeColor||this.polylines_conf.strokeColor,l=n.strokeOpacity||this.polylines_conf.strokeOpacity,c=n.strokeWeight||this.polylines_conf.strokeWeight,e=n.clickable||this.polylines_conf.clickable,h=n.zIndex||this.polylines_conf.zIndex),null!=n.lat&&null!=n.lng&&(i=new OpenLayers.Geometry.Point(n.lng,n.lat),r.push(i));return o=new OpenLayers.Geometry.LineString(r),s={strokeColor:a,strokeOpacity:l,strokeWidth:c},t=new OpenLayers.Feature.Vector(o,null,s),t.geometry.transform(new OpenLayers.Projection("EPSG:4326"),new OpenLayers.Projection("EPSG:900913")),this.polylinesLayer.addFeatures([t]),t},n.prototype.updateBoundsWithPolylines=function(){},n.prototype.updateBoundsWithPolygons=function(){},n.prototype.updateBoundsWithCircles=function(){},n.prototype.fitBounds=function(){return this.serviceObject.zoomToExtent(this.boundsObject,!0)},n.prototype.centerMapOnUser=function(){return this.serviceObject.setCenter(this.userLocation)},n.prototype.extendMapBounds=function(){},n.prototype.adaptMapToBounds=function(){return this.fitBounds()},n}(Gmaps4Rails)}.call(this);